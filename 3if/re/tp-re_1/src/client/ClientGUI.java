package client;

import javax.swing.DefaultListModel;
import javax.swing.text.DefaultCaret;

public class ClientGUI extends javax.swing.JFrame {

    /* Config */
    private final String GUI_TITLE = "Chat MarcArno";
    /* --- */

    public Client client;

    /**
     * Creates new form ClientGUI
     *
     * @param client
     */
    public ClientGUI(Client client) {
        this.client = client;

        initComponents();

        updateUsername();

        /* Auto scroll down chat */
        DefaultCaret caret = (DefaultCaret) textAreaChat.getCaret();
        caret.setUpdatePolicy(DefaultCaret.ALWAYS_UPDATE);
    }

    /**
     *
     * @param text
     */
    public void addChatText(String text) {
        if (!text.isEmpty()) {
            textAreaChat.setText(textAreaChat.getText() + "\n" + text);
        }
    }

    /**
     *
     */
    private void sendMessage() {
        if (client.isConnected) {
            try {
                client.SendToServer(textFieldMessage.getText());
                textFieldMessage.setText("");
            } catch (Exception e) {
                System.err.println("[Client exception]: " + e.getMessage());
            }
        }
    }

    private void updateUsername() {
        if (client.isConnected && !client.username.isEmpty()) {
            this.setTitle(GUI_TITLE + " - " + client.username);
        } else {
            this.setTitle(GUI_TITLE);
        }
        labelUsername.setText(client.username);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonSend = new javax.swing.JButton();
        textFieldMessage = new javax.swing.JTextField();
        scrollPaneChat = new javax.swing.JScrollPane();
        textAreaChat = new javax.swing.JTextArea();
        labelUsername = new javax.swing.JLabel();
        scrollPaneListUser = new javax.swing.JScrollPane();
        listUser = new javax.swing.JList();
        menuBar = new javax.swing.JMenuBar();
        menu = new javax.swing.JMenu();
        menuItemConnection = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Chat MarcArno");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        buttonSend.setText("Send");
        buttonSend.setEnabled(false);
        buttonSend.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonSendActionPerformed(evt);
            }
        });

        textFieldMessage.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                textFieldMessageKeyReleased(evt);
            }
        });

        scrollPaneChat.setAutoscrolls(true);

        textAreaChat.setEditable(false);
        textAreaChat.setColumns(20);
        textAreaChat.setRows(5);
        scrollPaneChat.setViewportView(textAreaChat);

        labelUsername.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelUsername.setText("-");

        scrollPaneListUser.setViewportView(listUser);

        menu.setText("File");

        menuItemConnection.setText("Connect");
        menuItemConnection.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuItemConnectionActionPerformed(evt);
            }
        });
        menu.add(menuItemConnection);

        menuBar.add(menu);

        setJMenuBar(menuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(buttonSend)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(textFieldMessage))
                    .addComponent(scrollPaneChat, javax.swing.GroupLayout.DEFAULT_SIZE, 402, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(scrollPaneListUser, javax.swing.GroupLayout.DEFAULT_SIZE, 72, Short.MAX_VALUE)
                    .addComponent(labelUsername, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(labelUsername)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(scrollPaneListUser))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(scrollPaneChat, javax.swing.GroupLayout.DEFAULT_SIZE, 228, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(buttonSend)
                            .addComponent(textFieldMessage, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     *
     * @param evt
     */
    private void menuItemConnectionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuItemConnectionActionPerformed
        if (client.isConnected == false) {
            ClientGUIConnect clientGuiConnect = new ClientGUIConnect(this, true);
            clientGuiConnect.setVisible(true);
        } else {
            try {
                client.Disconnect();

                client.isConnected = false;
            } catch (Exception e) {
                System.err.println("[Client exception]: " + e.getMessage());
            }
        }

        if (client.isConnected == false) {
            menuItemConnection.setText("Connect");
            listUser.setModel(new DefaultListModel());
        } else {
            menuItemConnection.setText("Disconnect");
        }

        updateUsername();
        buttonSend.setEnabled(client.isConnected);
    }//GEN-LAST:event_menuItemConnectionActionPerformed

    /**
     *
     * @param evt
     */
    private void buttonSendActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonSendActionPerformed
        sendMessage();
    }//GEN-LAST:event_buttonSendActionPerformed

    /**
     *
     * @param evt
     */
    private void textFieldMessageKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textFieldMessageKeyReleased
        if (evt.getKeyCode() == java.awt.event.KeyEvent.VK_ENTER) {
            sendMessage();
        }
    }//GEN-LAST:event_textFieldMessageKeyReleased

    /**
     *
     * @param evt
     */
    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        if (client.isConnected) {
            try {
                client.Disconnect();
            } catch (Exception e) {
                System.err.println("[Client exception]: " + e.getMessage());
            }
        }
    }//GEN-LAST:event_formWindowClosing

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonSend;
    private javax.swing.JLabel labelUsername;
    public javax.swing.JList listUser;
    private javax.swing.JMenu menu;
    private javax.swing.JMenuBar menuBar;
    private javax.swing.JMenuItem menuItemConnection;
    private javax.swing.JScrollPane scrollPaneChat;
    private javax.swing.JScrollPane scrollPaneListUser;
    public javax.swing.JTextArea textAreaChat;
    private javax.swing.JTextField textFieldMessage;
    // End of variables declaration//GEN-END:variables

}
