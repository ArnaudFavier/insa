package client;

public class ClientGUI extends javax.swing.JFrame {
        
    public Client client;

    /**
     * Creates new form ClientGUI
     * @param client
     */
    public ClientGUI(Client client) {
        this.client = client;
        
        initComponents();
    }
    
    public void AddChatText(String text) {
        textAreaChat.setText(textAreaChat.getText() + text + "\n");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonSend = new javax.swing.JButton();
        textFieldMessage = new javax.swing.JTextField();
        scrollPane = new javax.swing.JScrollPane();
        textAreaChat = new javax.swing.JTextArea();
        menuBar = new javax.swing.JMenuBar();
        menu = new javax.swing.JMenu();
        menuItemConnection = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Chat MarcArno");

        buttonSend.setText("Send");
        buttonSend.setEnabled(false);
        buttonSend.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonSendActionPerformed(evt);
            }
        });

        textFieldMessage.setText("Message");

        textAreaChat.setEditable(false);
        textAreaChat.setColumns(20);
        textAreaChat.setRows(5);
        scrollPane.setViewportView(textAreaChat);

        menu.setText("File");

        menuItemConnection.setText("Connect");
        menuItemConnection.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuItemConnectionActionPerformed(evt);
            }
        });
        menu.add(menuItemConnection);

        menuBar.add(menu);

        setJMenuBar(menuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(scrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 380, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(buttonSend)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(textFieldMessage)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(scrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 228, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(buttonSend)
                    .addComponent(textFieldMessage, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void menuItemConnectionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuItemConnectionActionPerformed
        if (this.client.isConnected == false) {
            ClientGUIConnect clientGuiConnect = new ClientGUIConnect(this, true);
            clientGuiConnect.setVisible(true);
        } else {
            try {
                client.Disconnect();
                
                this.client.isConnected = false;
            } catch (Exception e) {
                System.err.println("[Client exception]: " + e.toString());
                e.printStackTrace();
            }
        }

        if (this.client.isConnected == false) {
            menuItemConnection.setText("Connect");
        } else {
            menuItemConnection.setText("Disconnect");
        }
        
        buttonSend.setEnabled(this.client.isConnected);
    }//GEN-LAST:event_menuItemConnectionActionPerformed

    private void buttonSendActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonSendActionPerformed
        try {
            this.client.SendToServer(textFieldMessage.getText());
        } catch (Exception e) {
            System.err.println("[Client exception]: " + e.toString());
            e.printStackTrace();
        }
    }//GEN-LAST:event_buttonSendActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonSend;
    private javax.swing.JMenu menu;
    private javax.swing.JMenuBar menuBar;
    private javax.swing.JMenuItem menuItemConnection;
    private javax.swing.JScrollPane scrollPane;
    private javax.swing.JTextArea textAreaChat;
    private javax.swing.JTextField textFieldMessage;
    // End of variables declaration//GEN-END:variables

}
